{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Keep Watching\\\\Keep-Watching\\\\client\\\\src\\\\components\\\\pages\\\\recommendations\\\\Recommendations.jsx\";\nimport React, { useEffect, useContext, useState } from \"react\"; // eslint-disable-next-line\n\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\"; //  importing components\n\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Grid from \"../../components/Grid/Grid\";\nimport MovieThubm from \"../../components/MovieThubmnail/MovieThumb\";\nimport NoImage from \"../../images/no_image.jpg\";\nimport Alerts from \"../../components/Alerts/Alerts\"; //  importing endpoint helpers \n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../../config\";\nimport { API_URL, API_KEY } from \"../../../config\"; // importing stylesheet\n\nimport \"./Recommendations.styles.css\"; //  importing context \n\nimport AuthContext from \"../../../context/Authentication/authenticationContext\";\nimport AlertContext from \"../../../context/AlertContext/AlertContext\";\n\nconst RecommendationsPage = props => {\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext); // eslint-disable-next-line\n\n  const {\n    user,\n    loading,\n    setLoadingtrue,\n    setLoadingFalse,\n    ratings,\n    loadUser,\n    isAuthenticated\n  } = authContext;\n  const {\n    setAlert\n  } = alertContext;\n  useEffect(() => {\n    loadUser();\n    console.log(\"user = \", user);\n\n    if (user) {\n      console.log(\"user.ratings = \", user.ratings);\n    } // eslint-disable-next-line\n\n  }, [isAuthenticated]);\n  const [recommendations, setRecommendations] = useState([]);\n  useEffect(() => {\n    console.log(\"The use effect for recommendations was called\");\n    console.log(\"recommendations in state => \", recommendations);\n  }, [recommendations]); // ------------------------------------------------------------------------user based handeler------------------------------------------------\n\n  const generateCollaborativeFilteringRecommendations = async event => {\n    try {\n      console.log(\"target.value = \", event.target.value);\n      const recommender_type = event.target.value;\n      setLoadingtrue();\n      let userRatings = user.ratings;\n      let data = {\n        recommender_type: await JSON.stringify(recommender_type),\n        userID: await JSON.stringify(user._id),\n        ratings: await JSON.stringify(userRatings)\n      }; // console.log(\"params = \", params)\n\n      try {\n        let config = {\n          headers: {\n            'Content-Type': 'application/json;charset=UTF-8',\n            \"Access-Control-Allow-Origin\": \"*\"\n          }\n        };\n        console.log(\"userID = \", data.userID);\n        console.log(\"Ratings = \", data.ratings);\n        data = await JSON.stringify(data);\n        let res = [];\n\n        if (recommender_type === \"userBasedCF\") {\n          console.log(\"making pst request to 'https://keepwatching-server.herokuapp.com/recommendations/usercolaborativefiltering'\");\n          res = await axios.post('https://keepwatching-server.herokuapp.com/recommendations/usercolaborativefiltering', data, config);\n        } else {\n          console.log(\"making pst request to 'https://keepwatching-server.herokuapp.com/recommendations/itemcolaborativefiltering'\");\n          res = await axios.post('https://keepwatching-server.herokuapp.com/recommendations/itemcolaborativefiltering', data, config);\n        }\n\n        console.log(\"recommendations = \", res.data);\n        console.log(\"Recommendations id recieved --->  making the tmdb api calls\");\n        let recommended_movies = [];\n        setLoadingtrue();\n\n        try {\n          for (let i = 0; i < res.data.length; i++) {\n            let id = res.data[i];\n            const endpoint = `${API_URL}movie/${id}?api_key=${API_KEY}`;\n            const result = await (await fetch(endpoint)).json();\n            console.log(\"results after the movie call = \", result);\n            recommended_movies.push(result);\n          }\n        } catch (err) {\n          console.log(\"some error in the for loop in the recommendations.jsx\");\n        }\n\n        setRecommendations(recommended_movies);\n        console.log(\"All the api calls success : - setting loading to false\");\n        setLoadingFalse();\n        return;\n      } catch (error) {\n        setLoadingFalse();\n        console.log(\"error in the catch block of the attempt to fetch recommendations block in the recommendations.jsx\");\n        console.log(\"error = \", error.message);\n      }\n\n      setLoadingFalse();\n    } catch (error) {\n      setLoadingFalse();\n\n      if (error.message === \"Cannot read property 'ratings' of null\") {\n        setAlert(\"Please Login to use this feature\");\n      } else {\n        console.log(\"error in the catch block of generateRecommendations in recommendationpage.jsx\");\n        console.log(\"error = \", error.message);\n      }\n    }\n  };\n\n  if (recommendations.length === 0 || loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recommendation-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recommendations\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, \"Recommendation\"), /*#__PURE__*/React.createElement(Alerts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), !isAuthenticated && /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 37\n      }\n    }, \"Sign in to Get Recommendations\"), loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: generateCollaborativeFilteringRecommendations,\n      value: \"userBasedCF\",\n      className: \"generateRecBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, \"Generate User Based Collaborative Filtering Recommendations\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: generateCollaborativeFilteringRecommendations,\n      value: \"itemBasedCF\",\n      className: \"generateRecBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 29\n      }\n    }, \"Generate Item Based Collaborative Filtering Recommendations\"))));\n  } else if (recommendations.length !== 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recommendation-route\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      header: \"Recommended Movies are:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, recommendations.map(movie => /*#__PURE__*/React.createElement(MovieThubm, {\n      key: movie.id,\n      clickable: true,\n      image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n      movieId: movie.id,\n      movieName: movie.original_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }))));\n  }\n};\n\nexport default RecommendationsPage;","map":{"version":3,"sources":["C:/Users/DELL/Keep Watching/Keep-Watching/client/src/components/pages/recommendations/Recommendations.jsx"],"names":["React","useEffect","useContext","useState","Link","axios","Spinner","Grid","MovieThubm","NoImage","Alerts","IMAGE_BASE_URL","POSTER_SIZE","API_URL","API_KEY","AuthContext","AlertContext","RecommendationsPage","props","authContext","alertContext","user","loading","setLoadingtrue","setLoadingFalse","ratings","loadUser","isAuthenticated","setAlert","console","log","recommendations","setRecommendations","generateCollaborativeFilteringRecommendations","event","target","value","recommender_type","userRatings","data","JSON","stringify","userID","_id","config","headers","res","post","recommended_movies","i","length","id","endpoint","result","fetch","json","push","err","error","message","map","movie","poster_path","original_title"],"mappings":"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","sourcesContent":["import React, {useEffect, useContext, useState} from \"react\"\r\n// eslint-disable-next-line\r\nimport {Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n \r\n//  importing components\r\nimport Spinner from \"../../components/Spinner/Spinner\"\r\nimport Grid from \"../../components/Grid/Grid\"\r\nimport MovieThubm from \"../../components/MovieThubmnail/MovieThumb\"\r\nimport NoImage from \"../../images/no_image.jpg\"\r\nimport Alerts from \"../../components/Alerts/Alerts\"\r\n\r\n//  importing endpoint helpers \r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../../config\"\r\nimport { API_URL, API_KEY } from \"../../../config\"\r\n\r\n// importing stylesheet\r\nimport \"./Recommendations.styles.css\"\r\n\r\n//  importing context \r\nimport AuthContext from \"../../../context/Authentication/authenticationContext\"\r\nimport AlertContext from \"../../../context/AlertContext/AlertContext\"\r\n\r\nconst RecommendationsPage =(props) => {\r\n    const authContext = useContext(AuthContext)\r\n    const alertContext = useContext(AlertContext)\r\n     // eslint-disable-next-line\r\n    const {user, loading, setLoadingtrue, setLoadingFalse, ratings, loadUser, isAuthenticated} = authContext;\r\n    const {setAlert} = alertContext\r\n\r\n\r\n    useEffect(  () => {\r\n        loadUser()\r\n        console.log(\"user = \", user)\r\n        if (user){\r\n\r\n            console.log(\"user.ratings = \", user.ratings )\r\n        }\r\n       \r\n     // eslint-disable-next-line\r\n    }, [ isAuthenticated])\r\n\r\n\r\n    \r\n    \r\n    const [recommendations, setRecommendations] = useState([])\r\n    useEffect( () => {\r\n        console.log(\"The use effect for recommendations was called\")\r\n        console.log(\"recommendations in state => \", recommendations)\r\n    }, [recommendations])\r\n// ------------------------------------------------------------------------user based handeler------------------------------------------------\r\n    const generateCollaborativeFilteringRecommendations = async (event) => {\r\n\r\n        try {\r\n            console.log(\"target.value = \", event.target.value)\r\n            const recommender_type = event.target.value\r\n            setLoadingtrue()\r\n                let userRatings = user.ratings;\r\n                let data = {\r\n                    recommender_type: await JSON.stringify(recommender_type),\r\n                    userID: await JSON.stringify(user._id),\r\n                    ratings: await JSON.stringify(userRatings)\r\n                } \r\n                // console.log(\"params = \", params)\r\n            \r\n                try{\r\n                    let config = {\r\n                        headers:{\r\n                            'Content-Type': 'application/json;charset=UTF-8',\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                        }\r\n                    }\r\n                    console.log(\"userID = \", data.userID);\r\n                    console.log(\"Ratings = \", data.ratings)\r\n                    data = await JSON.stringify(data)\r\n                    \r\n                    let res = []\r\n                    if (recommender_type=== \"userBasedCF\"){\r\n                        console.log(\"making pst request to 'https://keepwatching-server.herokuapp.com/recommendations/usercolaborativefiltering'\")\r\n                        res = await axios.post('https://keepwatching-server.herokuapp.com/recommendations/usercolaborativefiltering', data, config)\r\n                    }else{\r\n                        console.log(\"making pst request to 'https://keepwatching-server.herokuapp.com/recommendations/itemcolaborativefiltering'\")\r\n                        res = await axios.post('https://keepwatching-server.herokuapp.com/recommendations/itemcolaborativefiltering', data, config)\r\n                    }\r\n                    console.log(\"recommendations = \", res.data)\r\n                    \r\n                    \r\n                    \r\n                    console.log(\"Recommendations id recieved --->  making the tmdb api calls\")\r\n                    let recommended_movies = []\r\n                    setLoadingtrue()\r\n                    try{\r\n                        for (let i = 0; i<res.data.length; i++){\r\n                            let id = res.data[i]\r\n                            const endpoint = `${API_URL}movie/${id}?api_key=${API_KEY}`\r\n                            const result = await ( await fetch(endpoint) ).json()\r\n                            console.log(\"results after the movie call = \", result)\r\n                            recommended_movies.push(result)\r\n                        }\r\n                    }catch(err){\r\n                        console.log(\"some error in the for loop in the recommendations.jsx\")\r\n                    }\r\n\r\n                    setRecommendations(recommended_movies)\r\n                    console.log(\"All the api calls success : - setting loading to false\")\r\n                    setLoadingFalse()\r\n                    return \r\n\r\n                }catch(error){\r\n                    setLoadingFalse()\r\n                    console.log(\"error in the catch block of the attempt to fetch recommendations block in the recommendations.jsx\")\r\n                    console.log(\"error = \", error.message)\r\n                }\r\n                setLoadingFalse()\r\n        } catch (error) {\r\n            setLoadingFalse()\r\n            if(error.message === \"Cannot read property 'ratings' of null\"){\r\n                \r\n                setAlert(\"Please Login to use this feature\")\r\n            }else{\r\n                console.log(\"error in the catch block of generateRecommendations in recommendationpage.jsx\")\r\n                console.log(\"error = \", error.message)\r\n            }\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    \r\n\r\n   if (recommendations.length  === 0  || loading){ \r\n       return(\r\n       <div className=\"recommendation-container\">\r\n            <div className=\"recommendations\">\r\n\r\n                <h1>Recommendation</h1>\r\n                {/* <br /> */}\r\n                <Alerts />\r\n                {!isAuthenticated &&<Link to=\"/signin\">Sign in to Get Recommendations</Link>}\r\n                    {\r\n                        loading ?\r\n                        <Spinner />\r\n                        :   \r\n                    <div >\r\n                            <button onClick={generateCollaborativeFilteringRecommendations} value=\"userBasedCF\" className=\"generateRecBtn\">Generate User Based Collaborative Filtering Recommendations</button>\r\n                            <button onClick={generateCollaborativeFilteringRecommendations} value=\"itemBasedCF\" className=\"generateRecBtn\">Generate Item Based Collaborative Filtering Recommendations</button>\r\n                    </div>\r\n                    }\r\n            </div>\r\n        </div>)\r\n\r\n    }else if (recommendations.length !== 0){\r\n        \r\n        return(\r\n            <div className=\"recommendation-route\">\r\n\r\n                <Grid header=\"Recommended Movies are:\" >\r\n                    {recommendations.map(movie => (\r\n                        <MovieThubm \r\n                            key={movie.id}\r\n                            clickable\r\n                            image={movie.poster_path ?`${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`: NoImage}\r\n                            movieId={movie.id}\r\n                            movieName={movie.original_title}\r\n                        />\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default RecommendationsPage"]},"metadata":{},"sourceType":"module"}