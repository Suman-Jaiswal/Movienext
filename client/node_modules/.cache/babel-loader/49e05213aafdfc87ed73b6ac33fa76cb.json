{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Keep Watching\\\\Keep-Watching\\\\client\\\\src\\\\components\\\\components\\\\MovieInfo\\\\MovieInfo.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport NoImage from \"../../images/no_image.jpg\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../../config\";\nimport MovieThumb from \"../MovieThubmnail/MovieThumb\";\nimport { StyledMovieInfo } from \"./StyledMovieInfo\";\n\nconst MovieInfo = ({\n  movie\n}) => {\n  return /*#__PURE__*/React.createElement(StyledMovieInfo, {\n    backdrop: movie.backdrop_path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movieinfo-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movieinfo-thumb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MovieThumb, {\n    image: movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage,\n    clickable: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movieinfo-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, movie.title), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, \"plot\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, movie.overview, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rating-director\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 37\n    }\n  }, \"IMDB Rating\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 37\n    }\n  }, movie.vote_average)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"director\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 37\n    }\n  }, \"DIRECTOR\", movie.directors.length > 1 ? \"S\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 37\n    }\n  }, \" \", movie.directors.map(director => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: director.credit_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 48\n      }\n    }, director.name);\n  })))))));\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n  directors: PropTypes.array\n};\nexport default MovieInfo;","map":{"version":3,"sources":["C:/Users/DELL/Keep Watching/Keep-Watching/client/src/components/components/MovieInfo/MovieInfo.jsx"],"names":["React","PropTypes","NoImage","IMAGE_BASE_URL","POSTER_SIZE","MovieThumb","StyledMovieInfo","MovieInfo","movie","backdrop_path","poster_path","title","overview","vote_average","directors","length","map","director","credit_id","name","propTypes","object","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,iBAA5C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,eAAR,QAA8B,mBAA9B;;AACA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC7B,sBACI,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEA,KAAK,CAACC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,KAAK,EACDD,KAAK,CAACE,WAAN,GACC,GAAEP,cAAe,GAAEC,WAAY,GAAEI,KAAK,CAACE,WAAY,EADpD,GAGAR,OALR;AAOI,IAAA,SAAS,EAAE,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAYI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKM,KAAK,CAACG,KAAX,CADR,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACI,QAAV,MAHR,eAIQ;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADR,eAEQ;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBJ,KAAK,CAACK,YAA9B,CAFR,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaL,KAAK,CAACM,SAAN,CAAgBC,MAAhB,GAAyB,CAAzB,GAA4B,GAA5B,GAAiC,EAA9C,CADR,eAEQ;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBP,KAAK,CAACM,SAAN,CAAgBE,GAAhB,CAAoBC,QAAQ,IAAI;AAChD,wBAAO;AAAG,MAAA,GAAG,EAAEA,QAAQ,CAACC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BD,QAAQ,CAACE,IAAtC,CAAP;AACH,GAFmB,CAApB,CAFR,CALJ,CAJR,CAZJ,CADJ,CADJ;AAmCH,CApCD;;AAsCAZ,SAAS,CAACa,SAAV,GAAsB;AAClBZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB,MADC;AAElBP,EAAAA,SAAS,EAAEb,SAAS,CAACqB;AAFH,CAAtB;AAKA,eAAef,SAAf","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport NoImage from \"../../images/no_image.jpg\"\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../../config\"\r\nimport MovieThumb from \"../MovieThubmnail/MovieThumb\"\r\nimport {StyledMovieInfo} from \"./StyledMovieInfo\"\r\nconst MovieInfo = ({ movie }) => {\r\n    return (\r\n        <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n            <div className=\"movieinfo-content\">\r\n                <div className=\"movieinfo-thumb\">\r\n                    <MovieThumb\r\n                        image= {\r\n                            movie.poster_path ?\r\n                            `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                            :\r\n                            NoImage\r\n                        }\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n                <div className=\"movieinfo-text\">\r\n                        <h1>{movie.title}</h1>\r\n                        <h3>plot</h3>\r\n                        <p>{movie.overview} </p>\r\n                        <div className=\"rating-director\">                 \r\n                            <div>\r\n                                    <h3>IMDB Rating</h3>\r\n                                    <div className=\"score\">{movie.vote_average}</div>\r\n                            </div>\r\n                            <div className=\"director\">\r\n                                    <h3>DIRECTOR{movie.directors.length > 1? \"S\": \"\"}</h3>\r\n                                    <div className=\"\"> {movie.directors.map(director => {\r\n                                        return <p key={director.credit_id}>{director.name}</p>\r\n                                    })}</div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n\r\n        </StyledMovieInfo>\r\n    )\r\n}\r\n\r\nMovieInfo.propTypes = {\r\n    movie: PropTypes.object,\r\n    directors: PropTypes.array\r\n}\r\n\r\nexport default MovieInfo"]},"metadata":{},"sourceType":"module"}