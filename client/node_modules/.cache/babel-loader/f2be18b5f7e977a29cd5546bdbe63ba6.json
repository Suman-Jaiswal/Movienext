{"ast":null,"code":"const getDaysAgo = difference => {\n  // takes in difference between 2 dates in milliseconds and returns days ago\n  const days = Math.floor(difference / (24 * 60 * 60 * 1000));\n  const week = Math.floor(days / 7);\n  const months = Math.floor(days / 30);\n  const year = Math.floor(months / 12); // console.log(\"Days = \", days + \"days\")\n\n  if (year !== 0) {\n    return year + \" years ago\";\n  } else if (months !== 0) {\n    return months + \" month ago\";\n  } else if (week !== 0) {\n    return week + \" month ago\";\n  } else if (days !== 0) {\n    return days + \" month ago\";\n  } else if (days === 0) {\n    return \"Today\";\n  }\n};\n\nconst getDate = date => {\n  //  Takes in a string and returns a date in the format we want\n  var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  date = new Date(date);\n  const Year = 1900 + date.getYear();\n  const Month = month[date.getMonth()];\n  const ddate = date.getDate();\n  const day = days[date.getDay()];\n  const FinalDate = String(ddate) + \" \" + String(Month) + \" \" + String(Year);\n  const postedTime = date.getTime();\n  const currentTime = new Date().getTime();\n  const DaysAgo = getDaysAgo(currentTime - postedTime); // console.log(\"Days Ago = \", getDaysAgo(currentTime-postedTime))\n\n  return [FinalDate, DaysAgo];\n};\n\nexport { getDate, getDaysAgo };","map":{"version":3,"sources":["C:/Users/DELL/Keep Watching/Keep-Watching/client/src/components/components/FeedItem/utils.js"],"names":["getDaysAgo","difference","days","Math","floor","week","months","year","getDate","date","month","Date","Year","getYear","Month","getMonth","ddate","day","getDay","FinalDate","String","postedTime","getTime","currentTime","DaysAgo"],"mappings":"AACA,MAAMA,UAAU,GAAIC,UAAD,IAAgB;AAC/B;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAE,KAAG,EAAH,GAAM,EAAN,GAAS,IAAX,CAArB,CAAb;AACA,QAAMI,IAAI,GAAGF,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAC,CAAhB,CAAb;AACA,QAAMI,MAAM,GAAGH,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAC,EAAhB,CAAf;AACA,QAAMK,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWE,MAAM,GAAC,EAAlB,CAAb,CAL+B,CAM/B;;AACA,MAAGC,IAAI,KAAK,CAAZ,EAAe;AAEX,WAAOA,IAAI,GAAG,YAAd;AACH,GAHD,MAGM,IAAGD,MAAM,KAAK,CAAd,EAAiB;AACnB,WAAOA,MAAM,GAAG,YAAhB;AACH,GAFK,MAEA,IAAGD,IAAI,KAAK,CAAZ,EAAe;AACjB,WAAOA,IAAI,GAAG,YAAd;AACH,GAFK,MAEA,IAAGH,IAAI,KAAK,CAAZ,EAAc;AAChB,WAAOA,IAAI,GAAG,YAAd;AACH,GAFK,MAEA,IAAGA,IAAI,KAAK,CAAZ,EAAc;AAChB,WAAO,OAAP;AACH;AACJ,CAnBD;;AAoBA,MAAMM,OAAO,GAAIC,IAAD,IAAU;AACtB;AACA,MAAIC,KAAK,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EACY,MADZ,EACoB,QADpB,EAC8B,WAD9B,EAC2C,SAD3C,EACsD,UADtD,EACkE,UADlE,CAAZ;AAEA,MAAIR,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AACAO,EAAAA,IAAI,GAAG,IAAIE,IAAJ,CAASF,IAAT,CAAP;AAEA,QAAMG,IAAI,GAAG,OAAOH,IAAI,CAACI,OAAL,EAApB;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACD,IAAI,CAACM,QAAL,EAAD,CAAnB;AACA,QAAMC,KAAK,GAAGP,IAAI,CAACD,OAAL,EAAd;AACA,QAAMS,GAAG,GAAGf,IAAI,CAACO,IAAI,CAACS,MAAL,EAAD,CAAhB;AACA,QAAMC,SAAS,GAAIC,MAAM,CAACJ,KAAD,CAAN,GAAgB,GAAhB,GAAqBI,MAAM,CAACN,KAAD,CAA3B,GAAqC,GAArC,GAA0CM,MAAM,CAACR,IAAD,CAAnE;AACA,QAAMS,UAAU,GAAGZ,IAAI,CAACa,OAAL,EAAnB;AACA,QAAMC,WAAW,GAAG,IAAIZ,IAAJ,GAAWW,OAAX,EAApB;AACA,QAAME,OAAO,GAAGxB,UAAU,CAACuB,WAAW,GAACF,UAAb,CAA1B,CAdsB,CAetB;;AACA,SAAO,CAACF,SAAD,EAAYK,OAAZ,CAAP;AACH,CAjBD;;AAoBA,SACIhB,OADJ,EAEIR,UAFJ","sourcesContent":["\r\nconst getDaysAgo = (difference) => {\r\n    // takes in difference between 2 dates in milliseconds and returns days ago\r\n    const days = Math.floor(difference/(24*60*60*1000))\r\n    const week = Math.floor(days/7)\r\n    const months = Math.floor(days/30)\r\n    const year = Math.floor(months/12)\r\n    // console.log(\"Days = \", days + \"days\")\r\n    if(year !== 0) {  \r\n\r\n        return year + \" years ago\"\r\n    }else if(months !== 0) {\r\n        return months + \" month ago\"\r\n    }else if(week !== 0) {\r\n        return week + \" month ago\"\r\n    }else if(days !== 0){ \r\n        return days + \" month ago\"\r\n    }else if(days === 0){    \r\n        return \"Today\"\r\n    }\r\n}\r\nconst getDate = (date) => {\r\n    //  Takes in a string and returns a date in the format we want\r\n    var month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \r\n                            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n    date = new Date(date)\r\n\r\n    const Year = 1900 + date.getYear()\r\n    const Month = month[date.getMonth()]\r\n    const ddate = date.getDate()\r\n    const day = days[date.getDay()]\r\n    const FinalDate =  String(ddate) + \" \" +String(Month) + \" \" +String(Year) \r\n    const postedTime = date.getTime()\r\n    const currentTime = new Date().getTime()\r\n    const DaysAgo = getDaysAgo(currentTime-postedTime)\r\n    // console.log(\"Days Ago = \", getDaysAgo(currentTime-postedTime))\r\n    return [FinalDate, DaysAgo]\r\n}\r\n\r\n\r\nexport {\r\n    getDate, \r\n    getDaysAgo\r\n}"]},"metadata":{},"sourceType":"module"}